{"version":3,"sources":["DayLabels.tsx"],"names":["DayLabels","daysOfWeek","styles","row","dayLabelRow","map","day","toISOString","DayLabel","DayLabelComponent","theme","dayLabelText","dayLabelDateFormat","dayLabelContainer","color","dayLabelColor","fontFamily","dayLabelFontFamily","fontSize","dayLabelFontSize","textTransform","dayLabelTextTransform","StyleSheet","create","flexDirection","flex","justifyContent","alignItems","paddingVertical"],"mappings":";;;;;;;;AAAA;;AACA;;AACA;;AACA;;;;AAEO,SAASA,SAAT,CAAmB;AAAEC,EAAAA;AAAF,CAAnB,EAA2D;AAChE,sBACE,6BAAC,iBAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC;AAApB,kBACE,6BAAC,iBAAD;AAAM,IAAA,KAAK,EAAED,MAAM,CAACE;AAApB,KACGH,UAAU,CAACI,GAAX,CAAgBC,GAAD,iBACd,6BAAC,QAAD;AAAU,IAAA,GAAG,EAAG,aAAYA,GAAG,CAACC,WAAJ,EAAkB,EAA9C;AAAiD,IAAA,GAAG,EAAED;AAAtD,IADD,CADH,CADF,CADF;AASD;;AAEM,SAASE,QAAT,CAAkB;AAAEF,EAAAA;AAAF,CAAlB,EAA0C;AAC/C,QAAM;AAAEG,IAAAA,iBAAF;AAAqBC,IAAAA;AAArB,MAA+B,kCAArC;AAEA,QAAMC,YAAY,GAAG,qBAAOL,GAAP,EAAYI,KAAK,CAACE,kBAAlB,CAArB;AAEA,SAAOH,iBAAiB,gBACtB,6BAAC,iBAAD;AAAmB,IAAA,IAAI,EAAEH;AAAzB,IADsB,gBAGtB,6BAAC,iBAAD;AAAM,IAAA,KAAK,EAAEJ,MAAM,CAACW;AAApB,kBACE,6BAAC,iBAAD;AACE,IAAA,KAAK,EAAE;AACLC,MAAAA,KAAK,EAAEJ,KAAK,CAACK,aADR;AAELC,MAAAA,UAAU,EAAEN,KAAK,CAACO,kBAFb;AAGLC,MAAAA,QAAQ,EAAER,KAAK,CAACS,gBAHX;AAILC,MAAAA,aAAa,EAAEV,KAAK,CAACW;AAJhB;AADT,KAQGV,YARH,CADF,CAHF;AAgBD;;AAED,MAAMT,MAAM,GAAGoB,wBAAWC,MAAX,CAAkB;AAC/BpB,EAAAA,GAAG,EAAE;AACHqB,IAAAA,aAAa,EAAE;AADZ,GAD0B;AAI/BX,EAAAA,iBAAiB,EAAE;AACjBY,IAAAA,IAAI,EAAE,CADW;AAEjBC,IAAAA,cAAc,EAAE,QAFC;AAGjBC,IAAAA,UAAU,EAAE;AAHK,GAJY;AAS/BvB,EAAAA,WAAW,EAAE;AACXqB,IAAAA,IAAI,EAAE,CADK;AAEXD,IAAAA,aAAa,EAAE,KAFJ;AAGXE,IAAAA,cAAc,EAAE,eAHL;AAIXE,IAAAA,eAAe,EAAE;AAJN;AATkB,CAAlB,CAAf","sourcesContent":["import { format } from \"date-fns\";\nimport React from \"react\";\nimport { StyleSheet, Text, View } from \"react-native\";\nimport { useCalendarContext } from \"./context\";\n\nexport function DayLabels({ daysOfWeek }: { daysOfWeek: Date[] }) {\n  return (\n    <View style={styles.row}>\n      <View style={styles.dayLabelRow}>\n        {daysOfWeek.map((day) => (\n          <DayLabel key={`day-label-${day.toISOString()}`} day={day} />\n        ))}\n      </View>\n    </View>\n  );\n}\n\nexport function DayLabel({ day }: { day: Date }) {\n  const { DayLabelComponent, theme } = useCalendarContext();\n\n  const dayLabelText = format(day, theme.dayLabelDateFormat);\n\n  return DayLabelComponent ? (\n    <DayLabelComponent date={day} />\n  ) : (\n    <View style={styles.dayLabelContainer}>\n      <Text\n        style={{\n          color: theme.dayLabelColor,\n          fontFamily: theme.dayLabelFontFamily,\n          fontSize: theme.dayLabelFontSize,\n          textTransform: theme.dayLabelTextTransform,\n        }}\n      >\n        {dayLabelText}\n      </Text>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  row: {\n    flexDirection: \"row\",\n  },\n  dayLabelContainer: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  dayLabelRow: {\n    flex: 1,\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    paddingVertical: 10,\n  },\n});\n"]}